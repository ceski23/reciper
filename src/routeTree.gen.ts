/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as RecipesIndexImport } from './routes/recipes/index'
import { Route as SettingsUnitsImport } from './routes/settings/units'
import { Route as SettingsThemeImport } from './routes/settings/theme'
import { Route as SettingsAccountImport } from './routes/settings/account'
import { Route as RecipesSearchImport } from './routes/recipes/search'
import { Route as RecipesScrapeImport } from './routes/recipes/scrape'
import { Route as RecipesNewImport } from './routes/recipes/new'
import { Route as RecipesIdImport } from './routes/recipes/$id'
import { Route as AuthGoogleImport } from './routes/auth/google'
import { Route as RecipesIdEditImport } from './routes/recipes_/$id.edit'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const RecipesIndexRoute = RecipesIndexImport.update({
  path: '/recipes/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsUnitsRoute = SettingsUnitsImport.update({
  path: '/settings/units',
  getParentRoute: () => rootRoute,
} as any)

const SettingsThemeRoute = SettingsThemeImport.update({
  path: '/settings/theme',
  getParentRoute: () => rootRoute,
} as any)

const SettingsAccountRoute = SettingsAccountImport.update({
  path: '/settings/account',
  getParentRoute: () => rootRoute,
} as any)

const RecipesSearchRoute = RecipesSearchImport.update({
  path: '/recipes/search',
  getParentRoute: () => rootRoute,
} as any)

const RecipesScrapeRoute = RecipesScrapeImport.update({
  path: '/recipes/scrape',
  getParentRoute: () => rootRoute,
} as any)

const RecipesNewRoute = RecipesNewImport.update({
  path: '/recipes/new',
  getParentRoute: () => rootRoute,
} as any)

const RecipesIdRoute = RecipesIdImport.update({
  path: '/recipes/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthGoogleRoute = AuthGoogleImport.update({
  path: '/auth/google',
  getParentRoute: () => rootRoute,
} as any)

const RecipesIdEditRoute = RecipesIdEditImport.update({
  path: '/recipes/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/google': {
      id: '/auth/google'
      path: '/auth/google'
      fullPath: '/auth/google'
      preLoaderRoute: typeof AuthGoogleImport
      parentRoute: typeof rootRoute
    }
    '/recipes/$id': {
      id: '/recipes/$id'
      path: '/recipes/$id'
      fullPath: '/recipes/$id'
      preLoaderRoute: typeof RecipesIdImport
      parentRoute: typeof rootRoute
    }
    '/recipes/new': {
      id: '/recipes/new'
      path: '/recipes/new'
      fullPath: '/recipes/new'
      preLoaderRoute: typeof RecipesNewImport
      parentRoute: typeof rootRoute
    }
    '/recipes/scrape': {
      id: '/recipes/scrape'
      path: '/recipes/scrape'
      fullPath: '/recipes/scrape'
      preLoaderRoute: typeof RecipesScrapeImport
      parentRoute: typeof rootRoute
    }
    '/recipes/search': {
      id: '/recipes/search'
      path: '/recipes/search'
      fullPath: '/recipes/search'
      preLoaderRoute: typeof RecipesSearchImport
      parentRoute: typeof rootRoute
    }
    '/settings/account': {
      id: '/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsAccountImport
      parentRoute: typeof rootRoute
    }
    '/settings/theme': {
      id: '/settings/theme'
      path: '/settings/theme'
      fullPath: '/settings/theme'
      preLoaderRoute: typeof SettingsThemeImport
      parentRoute: typeof rootRoute
    }
    '/settings/units': {
      id: '/settings/units'
      path: '/settings/units'
      fullPath: '/settings/units'
      preLoaderRoute: typeof SettingsUnitsImport
      parentRoute: typeof rootRoute
    }
    '/recipes/': {
      id: '/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof RecipesIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipes/$id/edit': {
      id: '/recipes/$id/edit'
      path: '/recipes/$id/edit'
      fullPath: '/recipes/$id/edit'
      preLoaderRoute: typeof RecipesIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthGoogleRoute,
  RecipesIdRoute,
  RecipesNewRoute,
  RecipesScrapeRoute,
  RecipesSearchRoute,
  SettingsAccountRoute,
  SettingsThemeRoute,
  SettingsUnitsRoute,
  RecipesIndexRoute,
  SettingsIndexRoute,
  RecipesIdEditRoute,
})

/* prettier-ignore-end */
